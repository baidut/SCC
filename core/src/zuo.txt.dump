/*
zuo

set后run模式 setInFile setLexFile ...
掩码配置输出文件
#define GEN_LEX     0x01
#define GEN_PARSE   0x02
#define GEN_CODE    0x04
#define isGenLex(op)
何必那？


/* 命令行处理 ----------------------------------------------- */
static void ShowHelp(void)
{
	char *msg[] =
	{
		"命令行调用方法: scc 文件名 {选项}\n",
		"花括号表示可多选",
		"选项:\n",
		"  --dump-words 输出词法分析结果到文件 xxx.words\n",
		"  --dump-ast   输出语法分析结果到文件 xxx.ast\n",
		"  --dump-IR    输出中间代码到文件 xxx.uil\n",
		"  -E           仅运行\n",
		"  -S           仅编译生成中间代码\n",
		"  -c           仅编译和汇编\n",
		"  -o file      输出文件名 'file'\n",
		"  -h           显示帮助\n",
		"  -v           详细模式，输出详细信息\n",
		0
	};
	int i = 0;

	while (msg[i])
	{
		printf(msg[i]);
		i++;
	}
}
int main(int argc, char *argv[]){
int i;
	if (argc <= 1){
		ShowHelp();
		// exit(0);允许直接打开exe使用
		printf("你直接打开了程序，那么请输入: 文件名 {选项} #\n",)
        do{
            scanf("%s",argv+argc);
            argc++;
        } while(0==strcmp(argv+argc,"#"));
	}
	Lex_selectFile(argv[1]);
	for (i = 1; i < argc; ++i)
	{
		if (strcmp(argv[i], "--dump-words") == 0){
            Lex_test();
		}
		else if (strcmp(argv[i], "--dump-ast") == 0){
            Parse_test();
		}
		else if (strcmp(argv[i], "-S") == 0)
		{
			Option.oftype = ASM_FILE;
		}
		else if (strcmp(argv[i], "-c") == 0)
		{
			Option.oftype = OBJ_FILE;
		}
		else if (strcmp(argv[i], "-o") == 0)
		{
			Option.oftype = EXE_FILE;
			Option.out = argv[++i];
		}
		else if (strncmp(argv[i], "-D", 2) == 0 ||
			strncmp(argv[i], "-U", 2) == 0 ||
			strncmp(argv[i], "-I", 2) == 0)
		{
			Option.pflags = ListAppend(Option.pflags, argv[i]);
		}
		else if (strcmp(argv[i], "-h") == 0)
		{
			ShowHelp();
		}
		else if (strcmp(argv[i], "-v") == 0)
		{
			Option.verbose = 1;
		}
		else if (strncmp(argv[i], "-Wl,", 4) == 0)
		{
			Option.lflags = ListAppend(Option.lflags, argv[i]);
		}
		else if (strncmp(argv[i], "-Wa,", 4) == 0)
		{
			Option.aflags = ListAppend(Option.aflags, argv[i]);
		}
		else if (argv[i][0] == '-')
		{
			printf("Unrecognized option %s\n", argv[i]);
			i++;
		}
		else
			break;
	}

	return 0;
}

*/